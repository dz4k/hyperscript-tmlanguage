{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "_hyperscript",
  "patterns": [
    { "name": "comment.line.double-dash._hyperscript", "begin": "--", "end": "$" },
    { "include": "#possessive" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#attributeRefs" },
    { "include": "#punctuation" },
    { "include": "#simpleLiterals" },
    { "include": "#cssRefs" },
    { "include": "#inlineJS" }
  ],
  "repository": {
    "possessive": {
      "patterns": [
        { "name": "keyword.operator._hyperscript", "match": "(?x) \\+ | (?<=\\s) - (?=\\s) | \\/ | \\* | \\\\ | -> | <(?= \\s) | > | <= | >= | == | = | !== | != | =| \\.\\. | (?<=[A-Za-z0-9\\}\\)\\]]) \\. | \\% | \\| | ! | \\$ | 's" }
      ]
    },
    "keywords": {
      "name": "keyword._hyperscript",
      "patterns": [
        { "name": "keyword.control._hyperscript", "match": "(?x) \\b(\n  catch|if|else|otherwise\n  repeat\\s+forever|repeat\\s+for|repeat\\s+in|repeat\\s+while|\n  repeat\\s+until\\s+event|repeat\\s+until|repeat|times|index|\n  then|end|while|until|unless|for\n)\\b" },
        { "name": "keyword.other.command._hyperscript", "match": "(?x) \\b(\n  add|remove|put|async|call|called|get|hide|measure|add|async|call|get|hide|measure|\n  return|send|settle|set|show|take|throw|toggle\\s+between|toggle|\n  transition|trigger|wait\\s+for|wait|fetch|tell|go|increment|\n  decrement|halt|make\\s+an|make\\s+a|make|log|default|continue|breakpoint\n)\\b" },
        { "name": "keyword.control.feature._hyperscript", "match": "(?x) \\b(\n  on|def|worker|eventsource|socket|init|behavior|install|require\n)\\b" },
        { "name": "keyword.operator.expression._hyperscript", "match": "(?x) \\b(\n  in|from|to|with|over|into|before|after|\n  at\\s+end\\s+of|at\\s+start\\s+of|is\\s+an|is\\s+a|is\\s+not|\n  is|am|as|and|or|no|closest|the|of|first|last|random|on|\n  seconds|milliseconds|(?<=\\s)s|(?<=\\s)ms)\\b|\n  (?<=on\\s)every|(debounced|throttled) \\s+ at|\n  queue|(?<=queue\\s)(all|first|last|none)" },
        { "name": "storage.modifier._hyperscript", "match": "\\b(local|element|module|global)\\b" },
        { "name": "variable.language._hyperscript", "match": "(?x) \\b(\n  I|me|my|you|your|yourself|it|its|result|\n  event|target|detail|\n  document|body\n)\\b" }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.separator.comma._hyperscript", "match": "," },
        { "name": "punctuation.separator.key-value._hyperscript", "match": ":" },
        { "name": "meta.brace.round._hyperscript", "match": "[()]" },
        { "name": "meta.brace.square._hyperscript", "match": "[\\[\\]]" }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double._hyperscript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "include": "#inside-string" }
          ]
        },
        {
          "name": "string.quoted.single._hyperscript",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "include": "#inside-string" }
          ]
        },
        {
          "name": "string.interpolated._hyperscript",
          "begin": "`",
          "end": "`",
          "patterns": [
            { "include": "#template" }
          ]
        }
      ]
    },
    "inside-string": {
      "patterns": [
        { "name": "constant.character.escape._hyperscript", "match": "\\\\." }
      ]
    },
    "template": {
      "patterns": [
        {
          "name": "meta.template.expression._hyperscript",
          "begin": "\\$\\{",
          "end": "\\}",
          "patterns": [
            { "include": "source._hyperscript" }
          ]
        }
      ]
    },
    "simpleLiterals": {
      "patterns": [
        { "name": "constant.numeric._hyperscript", "match": "\\d+(\\.\\d+)?" },
        { "name": "constant.language._hyperscript", "match": "\\b(true|false|null|undefined)\\b" },
        { "name": "support.variable._hyperscript.builtin-conversion", "match": "(?x) \\b(\n  # Conversions\n  String|Number|Int|Float|Date|Array|HTML|Fragment|JSON|Object|Values\n)\\b'" }
      ]
    },
    "cssRefs": {
      "name": "meta.selector._hyperscript",
      "patterns": [
        { "name": "meta.selector._hyperscript entity.other.attribute-name.class._hyperscript", "match": "(?x) \\.[\\-\\w\\d_\\$]+" },
        { "name": "meta.selector._hyperscript entity.other.attribute-name.id._hyperscript", "match": "(?x) \\#[\\-\\w\\d_\\$]+" },
        {
          "name": "meta.selector._hyperscript entity.other.attribute-name.class._hyperscript.dynamic-class",
          "begin": "(?<![A-Za-z0-9\\}\\)\\]])\\.\\{",
          "end": "\\}",
          "patterns": [
            { "include": "$self" }
          ]
        },
        {
          "name": "meta.selector._hyperscript entity.other.attribute-name.id._hyperscript.dynamic-class",
          "begin": "(?<![A-Za-z0-9\\}\\)\\]])\\#\\{",
          "end": "\\}",
          "patterns": [
            { "include": "$self" }
          ]
        },
        {
          "name": "meta.embedded.line.css meta.selector._hyperscript",
          "contentName": "source.css",
          "begin": "\\<(?!\\s)",
          "end": "\\/\\>",
          "patterns": [
            { "include": "#template" },
            { "include": "source.css#selector-innards" }
          ]
        }
      ]
    },
    "inlineJS": {
      "patterns": [
        {
          "name": "meta.embedded.line.js",
          "begin": "\\b(js)\\b(\\(.*\\))?",
          "beginCaptures": {
            "1": { "name": "keyword.other.command._hyperscript" }
          },
          "end": "\\bend\\b",
          "endCaptures": {
            "0": { "name": "keyword.other.command._hyperscript" }
          },
          "patterns": [
            { "include": "source.js" }
          ]
        }
      ]
    },
    "attributeRefs": {
      "patterns": [
        {
          "name": "meta.attribute._hyperscript.long-form",
          "begin": "\\[@([a-zA-Z\\-\\_]+)",
          "end": "]",
          "beginCaptures": {
            "1": { "name": "entity.other.attribute-name._hyperscript" }
          },
          "patterns": [
            { "name": "punctuation.separator.key-value._hyperscript", "match": "\\=" },
            {
              "name": "entity.other.attribute-value",
              "begin": "(?<=\\=)",
              "end": "(?=\\])",
              "patterns": [
                { "include": "#strings" }
              ]
            }
          ]
        },
        {
          "name": "meta.attribute._hyperscript",
          "match": "@([a-zA-Z\\-\\_]+)",
          "captures": {
            "1": { "name": "entity.other.attribute-name._hyperscript" }
          }
        }
      ]
    }
  },
  "scopeName": "source._hyperscript"
}